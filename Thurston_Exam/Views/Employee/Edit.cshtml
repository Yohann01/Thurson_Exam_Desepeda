@model Thurston_Exam.Models.Employee

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div id="message" class="text-danger"></div>

@using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { id = "editForm", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeID)

        <div class="form-group">
            <label class="control-label col-md-2" for="FirstName">First Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LastName">Last Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="btnSave" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var inputs = document.querySelectorAll('[name="FirstName"], [name="LastName"], [name="Position"]');

            inputs.forEach(function (input) {
                input.addEventListener('input', function () {
                    this.value = this.value.replace(/[0-9]/g, '');
                });

                input.addEventListener('keydown', function (event) {
                    if (/[0-9]/.test(event.key)) {
                        event.preventDefault();
                        let name;
                        switch (input.name) {
                            case 'FirstName':
                                name = 'First Name'
                                break;
                            case 'LastName':
                                name = 'Last Name'
                                break;
                            case 'Position':
                                name = 'Position'
                                break;
                        }
                        Swal.fire({
                            position: "top",
                            icon: "warning",
                            title: "Numbers are not allowed in the " + name,
                            showConfirmButton: false,
                            timer: 1000
                        });
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#btnSave').click(function (e) {
                e.preventDefault(); // Prevent the default form submit

                var formData = $("#editForm").serialize();
                // Get the email input value and validate it
                var email = $('#Email').val();
                if (!isValidEmail(email)) {
                    Swal.fire({
                        position: "top",
                        icon: "warning",
                        title: "Please enter a valid email address.",
                        showConfirmButton: false,
                        timer: 1000
                    });
                    return; // Exit function if email is not valid
                }

                // If email is valid, proceed with AJAX post
                $.ajax({
                    url: '@Url.Action("Edit", "Employee")',
                    type: 'POST',
                    data: formData,
                    dataType: 'json',
                    success: function (response) {
                        Swal.fire({
                            position: "center",
                            icon: "success",
                            title: "Employee edited successfully",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(function() {
                            window.location.href = '@Url.Action("Index", "Employee")';
                        });
                    },
                    error: function (xhr, status, error) {
                        $("#message").text('Error editing employee record: ' + xhr.responseText);
                    }
                });
            });
            // Function to validate email format
            function isValidEmail(email) {
                var regex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                return regex.test(email);
            }
        });
    </script>
}
